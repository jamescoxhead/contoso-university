@page "{id:int}"
@using ContosoUniversity.Web.ExtensionMethods
@model ContosoUniversity.Web.Pages.Departments.DeleteModel

@{
    ViewData["Title"] = $"Delete Department - {Model.Department.Name}";
}

<h1>Delete<small class="text-body-secondary">@Model.Department!.Name</small></h1>

@if (!string.IsNullOrEmpty(Model.ConcurrencyErrorMessage))
{
    <p class="text-danger">@Model.ConcurrencyErrorMessage</p>
}

<h3>Are you sure you want to delete this department?</h3>
@if (Model.Department != null)
{
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department!.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department!.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department!.Budget)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department!.Budget)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department!.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department!.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department!.RowVersion)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department!.RowVersion.GetLastChars())
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department!.Administrator)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department!.Administrator.FirstMidName)
        </dd>
    </dl>

    <form method="post">
        <input type="hidden" asp-for="Department!.DepartmentId" />
        <input type="hidden" asp-for="Department!.RowVersion" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="./Index">Back to List</a>
    </form>
}
