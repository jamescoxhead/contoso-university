@page
@model ContosoUniversity.Web.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Students";
    var previousDisabledClass = !Model.Students.HasPreviousPage ? "disabled" : string.Empty;
    var nextDisabledClass = !Model.Students.HasNextPage ? "disabled" : string.Empty;
}

<h1>Students</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="row row-cols-lg-auto align-items-center">
        <div class="col-12">
            <label class="visually-hidden" for="SearchString">Find by name</label>
            <div class="input-group">
                <input type="text" name="SearchString" id="SearchString" class="form-control" placeholder="Find by name" value="@Model.CurrentFilter" />
                <button class="btn btn-outline-primary" type="submit">Search</button>
            </div>
        </div>
        <div class="col-12">
            <a asp-page="./Index">Back to full List</a>
        </div>
    </div>
</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].LastName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].FirstMidName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Students) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.StudentId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.StudentId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.StudentId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @previousDisabledClass">Previous</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabledClass">Next</a>
